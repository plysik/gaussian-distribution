{"version":3,"sources":["components/Bar.js","models/Dice.js","components/BarPanel.js","utils/color.js","components/Header.js","actions.js","components/Form.js","utils/strings.js","components/Year.js","dashboard/Dashboard.js","App.js","registerServiceWorker.js","App.reducer.js","App.sagas.js","App.store.js","index.js"],"names":["Bar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","BAR_BASE_HEIGHT","classes","react_default","a","createElement","className","bar","strip","style","height","concat","rollResultCount","backgroundColor","rollResult","PureComponent","withStyles","theme","display","alignItems","flexDirection","justifyContent","textAlign","margin","border","minWidth","minHeight","borderRadius","Dice","max","arguments","length","undefined","min","Math","floor","random","BarPanel","calculate","_this$props","diceCount","diceMax","rollCount","result","i","sum","j","roll","push","_","groupBy","num","state","bars","keys","reduce","prev","curr","prevVal","currVal","Fragment","map","key","components_Bar","_ref","_ref$hue","hue","_ref$saturation","saturation","_ref$lightness","lightness","generatePastelColor","connect","ownProps","objectSpread","toJS","Header","Actions","updateRollCount","updateRollCountCompleted","updateDiceCount","updateDiceCountCompleted","updateDiceMax","updateDiceMaxCompleted","actionBuilder","type","payload","Form","bindOnChange","field","actionName","string","splitOn","split","word","charAt","toUpperCase","slice","join","capitalize","dispatch","e","parseInt","target","value","container","noValidate","autoComplete","index_es","spacing","justify","item","id","label","classNames","textField","dense","variant","onChange","color","Component","flexWrap","marginLeft","unit","marginRight","marginTop","menu","width","gridItem","get","Year","currYear","Date","getFullYear","appBar","position","icon","heroUnit","palette","background","paper","heroContent","maxWidth","padding","heroButtons","layout","defineProperty","breakpoints","up","footer","CssBaseline_default","AppBar_default","Toolbar_default","Typography_default","noWrap","component","align","gutterBottom","paragraph","components_Header","components_Form","components_BarPanel","href","App","es","dashboard_Dashboard","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","initialState","Immutable","fromJS","rootReducer","action","set","rootSaga","regenerator_default","wrap","_context","next","put","stop","_marked","_context2","_marked2","_context3","_marked3","_context4","takeLatest","_marked4","sagaMiddleware","createSagaMiddleware","middlewares","createStoreWithMiddleware","applyMiddleware","apply","createStore","shouldLoadDevTools","devToolsExtension","f","store","run","configureStore","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qWAwBMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,gBAAkB,EAFNP,wEAIV,IACCQ,EAAYL,KAAKJ,MAAjBS,QACR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQK,KACtBJ,EAAAC,EAAAC,cAAA,OACEC,UAAWJ,EAAQM,MACnBC,MAAO,CACLC,OAAM,GAAAC,OAAKd,KAAKJ,MAAMmB,gBAAkBf,KAAKI,gBAAvC,MACNY,gBAAiBhB,KAAKJ,MAAMoB,kBAG7BhB,KAAKJ,MAAMmB,iBAEdT,EAAAC,EAAAC,cAAA,YAAOR,KAAKJ,MAAMqB,oBAlBRC,iBAuBHC,uBA3CA,SAAAC,GAAK,MAAK,CACvBV,IAAK,CACHW,QAAS,OACTC,WAAY,SACZC,cAAe,SACfC,eAAgB,WAChBC,UAAW,SACXC,OAAQ,OAEVf,MAAO,CACLgB,OAAQ,4BACRC,SAAU,OACVC,UAAW,OACXC,aAAc,MACdT,QAAS,OACTC,WAAY,SACZE,eAAgB,kBA2BLL,CAAmBxB,6BCrCnBoC,aATb,SAAAA,IAA8B,IAAlBC,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,EAAGG,EAASH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAAGnC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,GAC5B/B,KAAKgC,IAAMA,EACXhC,KAAKoC,IAAMA,qDAGX,OAAOC,KAAKC,MAAMD,KAAKE,UAAYvC,KAAKgC,IAAMhC,KAAKoC,IAAM,IAAMpC,KAAKoC,aCClEI,cACJ,SAAAA,EAAY5C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,IACjB3C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,KAAMJ,KAMR6C,UAAY,WAGV,IAHgB,IAAAC,EAC0B7C,EAAKD,MAAvC+C,EADQD,EACRC,UAAWC,EADHF,EACGE,QAASC,EADZH,EACYG,UACxBC,EAAS,GACJC,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAElC,IADA,IAAIC,EAAM,EACDC,EAAI,EAAGA,EAAIN,EAAWM,IAAK,CAElCD,GADa,IAAIjB,EAAKa,GACVM,OAEdJ,EAAOK,KAAKH,GAEd,OAAOI,IAAEC,QAAQP,EAAQ,SAASQ,GAChC,OAAOA,KAjBTzD,EAAK0D,MAAQ,CACXT,OAAQ,IAHOjD,wEAuBjB,IAAM2D,EAAOxD,KAAKyC,YACC3C,OAAO2D,KAAKD,GAAME,OAAO,SAACC,EAAMC,GACjD,IAEIC,EAAUF,EACVG,EAHUN,EAGMI,GAAM1B,OAC1B,OAAO2B,EAAUC,EAAUD,EAAUC,GACpChE,OAAO2D,KAAKD,GAAM,IACrB,OACElD,EAAAC,EAAAC,cAACF,EAAAC,EAAMwD,SAAP,KACGjE,OAAO2D,KAAKD,GAAMQ,IAAI,SAAAC,GACrB,OACE3D,EAAAC,EAAAC,cAAC0D,EAAD,CACED,IAAKA,EACLhD,WAAYgD,EACZlD,gBAAiByC,EAAKS,GAAK/B,OAC3BlB,gBC/CqB,SAAAmD,GAAA,IAAAC,EAAAD,EACjCE,WADiC,IAAAD,EAC3B/B,KAAKE,SADsB6B,EAAAE,EAAAH,EAEjCI,kBAFiC,IAAAD,EAEpBjC,KAAKE,SAFe+B,EAAAE,EAAAL,EAGjCM,iBAHiC,IAAAD,EAGrBnC,KAAKE,SAHgBiC,EAAA,aAAA1D,OAItB,IAAMuD,EAJgB,KAAAvD,OAIT,GAAK,GAAKyD,EAJD,MAAAzD,OAIgB,GAAK,GAAK2D,EAJ1B,MD+CJC,CAAoB,CACnCL,IAAKJ,EAAMnE,OAAO2D,KAAKD,GAAMtB,OAE7BqC,WAAY,IACZE,UAAW,iBA5CJvD,iBAgERyD,cAJS,SAACpB,EAAOqB,GAC9B,OAAO9E,OAAA+E,EAAA,EAAA/E,CAAA,GAAKyD,EAAMuB,SAGLH,CAAyBnC,GElElCuC,mLAEF,OACEzE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qGAAAM,OAEkBd,KAAKJ,MAAMiD,UAF7B,+BAAA/B,OAGiBd,KAAKJ,MAAM+C,UAH5B,gCAAA7B,OAImBd,KAAKJ,MAAMgD,QAJ9B,cAJa1B,iBAuBNyD,cAJS,SAACpB,EAAOqB,GAC9B,OAAO9E,OAAA+E,EAAA,EAAA/E,CAAA,GAAKyD,EAAMuB,SAGLH,CAAyBI,2BCpBzBC,EARC,CACdC,gBAAiB,oBACjBC,yBAA0B,8BAC1BC,gBAAiB,oBACjBC,yBAA0B,8BAC1BC,cAAe,uBACfC,uBAAwB,kCAGbC,EAAgB,SAACC,EAAMC,GAClC,MAAO,CACLD,OACAC,gBCLEC,6MACJC,aAAe,SAAAC,GACb,IAAMC,EAAU,SAAA/E,OCTb,SAAoBgF,GAAuB,IAAfC,EAAe9D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAL,IAK3C,OAJc6D,EAAOE,MAAMD,GACD/B,IAAI,SAAAiC,GAC5B,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,KAEhCC,KAAKN,GDIMO,CAAWV,IAC/BW,EAAa1G,EAAKD,MAAlB2G,SACR,OAAO,SAAAC,GACLD,EAAShB,EAAcP,EAAQa,GAAaY,SAASD,EAAEE,OAAOC,mFAGzD,IAAAjE,EAC4C1C,KAAKJ,MAAhDS,EADDqC,EACCrC,QAASwC,EADVH,EACUG,UAAWF,EADrBD,EACqBC,UAAWC,EADhCF,EACgCE,QACvC,OACEtC,EAAAC,EAAAC,cAAA,QAAMC,UAAWJ,EAAQuG,UAAWC,YAAU,EAACC,aAAa,OAC1DxG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMH,WAAS,EAACI,QAAS,GAAIC,QAAQ,UACnC3G,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMG,MAAI,GACR5G,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CACEI,GAAG,iBACHC,MAAM,YACN3G,UAAW4G,IAAWhH,EAAQiH,UAAWjH,EAAQkH,OACjD7F,OAAO,QACP8D,KAAK,SACLgC,QAAQ,WACRb,MAAO9D,EACP4E,SAAUzH,KAAK2F,aAAa,gBAGhCrF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMG,MAAI,GACR5G,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CACEI,GAAG,iBACHC,MAAM,YACN3G,UAAW4G,IAAWhH,EAAQiH,UAAWjH,EAAQkH,OACjD7F,OAAO,QACP8D,KAAK,SACLgC,QAAQ,WACRb,MAAOhE,EACP8E,SAAUzH,KAAK2F,aAAa,gBAGhCrF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMG,MAAI,GACR5G,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CACEI,GAAG,iBACHC,MAAM,UACN3G,UAAW4G,IAAWhH,EAAQiH,UAAWjH,EAAQkH,OACjD7F,OAAO,QACP8D,KAAK,SACLgC,QAAQ,WACRb,MAAO/D,EACP6E,SAAUzH,KAAK2F,aAAa,cAGhCrF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMG,MAAI,GACR5G,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAQS,QAAQ,YAAYE,MAAM,aAAlC,yBAlDOC,aAsFJxG,uBAlBA,SAAAC,GAAK,MAAK,CACvBwF,UAAW,CACTvF,QAAS,OACTuG,SAAU,QAEZN,UAAW,CACTO,WAAYzG,EAAM4F,QAAQc,KAC1BC,YAAa3G,EAAM4F,QAAQc,MAE7BP,MAAO,CACLS,UAAW,IAEbC,KAAM,CACJC,MAAO,KAETC,SAAU,KAGGhH,CAAmBwD,YA1BV,SAAApB,GACtB,MAAO,CACLV,UAAWU,EAAM6E,IAAI,aACrBzF,UAAWY,EAAM6E,IAAI,aACrBxF,QAASW,EAAM6E,IAAI,aAsBWzD,CAAyBe,IE3F5C2C,EAAA,WACb,IAAMC,GAAW,IAAIC,MAAOC,cAC5B,OAAOlI,EAAAC,EAAAC,cAACF,EAAAC,EAAMwD,SAAP,KAAiBuE,ICmHXnH,2BA1GA,SAAAC,GAAK,MAAK,CACvBqH,OAAQ,CACNC,SAAU,YAEZC,KAAM,CACJZ,YAAkC,EAArB3G,EAAM4F,QAAQc,MAE7Bc,SAAU,CACR5H,gBAAiBI,EAAMyH,QAAQC,WAAWC,OAE5CC,YAAa,CACXC,SAAU,IACVvH,OAAQ,SACRwH,QAAO,GAAApI,OAA0B,EAArBM,EAAM4F,QAAQc,KAAnB,SAAAhH,OAAwD,EAArBM,EAAM4F,QAAQc,KAAjD,OAETqB,YAAa,CACXnB,UAAgC,EAArB5G,EAAM4F,QAAQc,MAE3BsB,OAAOtJ,OAAAuJ,EAAA,EAAAvJ,CAAA,CACLoI,MAAO,OACPL,WAAiC,EAArBzG,EAAM4F,QAAQc,KAC1BC,YAAkC,EAArB3G,EAAM4F,QAAQc,KAC3BzG,QAAS,OACTG,eAAgB,iBACfJ,EAAMkI,YAAYC,GAAG,KAA4B,EAArBnI,EAAM4F,QAAQc,KAAW,GAAK,CACzDI,MAAO,KACPL,WAAY,OACZE,YAAa,SAIjByB,OAAQ,CACNxI,gBAAiBI,EAAMyH,QAAQC,WAAWC,MAC1CG,QAA8B,EAArB9H,EAAM4F,QAAQc,QAyEZ3G,CArEf,SAAmBvB,GAAO,IAChBS,EAAYT,EAAZS,QAER,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwD,SAAP,KACEzD,EAAAC,EAAAC,cAACiJ,EAAAlJ,EAAD,MACAD,EAAAC,EAAAC,cAACkJ,EAAAnJ,EAAD,CAAQmI,SAAS,SAASjI,UAAWJ,EAAQoI,QAC3CnI,EAAAC,EAAAC,cAACmJ,EAAApJ,EAAD,KAEED,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAD,CAAYiH,QAAQ,KAAKE,MAAM,UAAUmC,QAAM,GAA/C,2BAKJvJ,EAAAC,EAAAC,cAAA,YAEEF,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQuI,UACtBtI,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQ2I,aACtB1I,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAD,CACEuJ,UAAU,KACVtC,QAAQ,KACRuC,MAAM,SACNrC,MAAM,cACNsC,cAAY,GALd,yBASA1J,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAD,CACEiH,QAAQ,KACRuC,MAAM,SACNrC,MAAM,gBACNuC,WAAS,GAJX,mHAQE3J,EAAAC,EAAAC,cAAA,WARF,oEAWAF,EAAAC,EAAAC,cAAC0J,EAAD,MACA5J,EAAAC,EAAAC,cAAC2J,EAAD,QAGJ7J,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQ+I,QACtB9I,EAAAC,EAAAC,cAAC4J,EAAD,QAGJ9J,EAAAC,EAAAC,cAAA,UAAQC,UAAWJ,EAAQmJ,QACzBlJ,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAD,CAAYiH,QAAQ,KAAKuC,MAAM,SAASC,cAAY,GAApD,yBAGA1J,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAD,CACEiH,QAAQ,YACRuC,MAAM,SACNrC,MAAM,gBACNoC,UAAU,KAJZ,qBAMoBxJ,EAAAC,EAAAC,cAAA,KAAG6J,KAAK,6BAAR,oBAAoD,IANxE,yBAOc/J,EAAAC,EAAAC,cAAA,KAAG6J,KAAK,4BAAR,eAPd,QAOwE,IACtE/J,EAAAC,EAAAC,cAAC6H,EAAD,WCrFKiC,2LAdX,OACEhK,EAAAC,EAAAC,cAAC+J,EAAA,EAAavK,KAAKJ,MACjBU,EAAAC,EAAAC,cAACgK,EAAD,cAJU7C,cCGZ8C,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhI,QACf0H,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,4CC7EpDC,SAAeC,EAAUC,OAAO,CAC3CpJ,UAAW,IACXF,UAAW,EACXC,QAAS,IAeIsJ,EAZK,WAAkC,IAAjC3I,EAAiCtB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB8J,EAAcI,EAAWlK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQgK,EAAO3G,MACb,KAAKR,EAAQI,yBACX,OAAO7B,EAAM6I,IAAI,YAAaD,EAAO1G,SACvC,KAAKT,EAAQM,uBACX,OAAO/B,EAAM6I,IAAI,UAAWD,EAAO1G,SACrC,KAAKT,EAAQE,yBACX,OAAO3B,EAAM6I,IAAI,YAAaD,EAAO1G,SACvC,QACE,OAAOlC,wCCfH4B,gBAGAE,gBAGAJ,gBAGeoH,IATzB,SAAUlH,GAAgBgH,GAA1B,OAAAG,EAAA/L,EAAAgM,KAAA,SAAAC,GAAA,cAAAA,EAAA7I,KAAA6I,EAAAC,MAAA,OACE,OADFD,EAAAC,KAAA,EACQC,YAAInH,EAAcP,EAAQI,yBAA0B+G,EAAO1G,UADnE,wBAAA+G,EAAAG,SAAAC,EAAA5M,MAGA,SAAUqF,GAAc8G,GAAxB,OAAAG,EAAA/L,EAAAgM,KAAA,SAAAM,GAAA,cAAAA,EAAAlJ,KAAAkJ,EAAAJ,MAAA,OACE,OADFI,EAAAJ,KAAA,EACQC,YAAInH,EAAcP,EAAQM,uBAAwB6G,EAAO1G,UADjE,wBAAAoH,EAAAF,SAAAG,GAAA9M,MAGA,SAAUiF,GAAgBkH,GAA1B,OAAAG,EAAA/L,EAAAgM,KAAA,SAAAQ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAN,MAAA,OACE,OADFM,EAAAN,KAAA,EACQC,YAAInH,EAAcP,EAAQE,yBAA0BiH,EAAO1G,UADnE,wBAAAsH,EAAAJ,SAAAK,GAAAhN,MAGe,SAAUqM,KAAV,OAAAC,EAAA/L,EAAAgM,KAAA,SAAAU,GAAA,cAAAA,EAAAtJ,KAAAsJ,EAAAR,MAAA,OACb,OADaQ,EAAAR,KAAA,EACPS,YAAWlI,EAAQG,gBAAiBA,IAD7B,OAEb,OAFa8H,EAAAR,KAAA,EAEPS,YAAWlI,EAAQK,cAAeA,IAF3B,OAGb,OAHa4H,EAAAR,KAAA,EAGPS,YAAWlI,EAAQC,gBAAiBA,IAH7B,wBAAAgI,EAAAN,SAAAQ,GAAAnN,MCLf,IAAMoN,GAAiBC,cACjBC,GAAc,CAACF,IAMfG,GAA4BC,IAAeC,WAAf,EAAmBH,GAAnBE,CAAgCE,KAE5DC,IACJhD,OAAOiD,kBAEH,SAAAC,GAAC,OAAIA,ICVX,IAAMC,GDYS,SAAwB/B,GACrC,IAAM+B,EAAQP,GACZrB,EACAH,EACA4B,IAGF,OADAP,GAAeW,IAAI1B,IACZyB,ECnBKE,CAAejC,GAC7B+B,GAAMvH,SAAS,CAAEf,KAAM,aACvByI,IAASC,OAAO5N,EAAAC,EAAAC,cAAC2N,EAAD,CAAKL,MAAOA,KAAWM,SAASC,eAAe,SJUhD,WACb,GAA6C,kBAAmBpD,UAAW,CAGzE,GADkB,IAAIqD,IAAIC,yBAAwB5D,OAAOC,UAC3C4D,SAAW7D,OAAOC,SAAS4D,OAIvC,OAGF7D,OAAO8D,iBAAiB,OAAQ,WAC9B,IAAMzD,EAAK,GAAAlK,OAAMyN,yBAAN,sBAEP9D,GAiDV,SAAiCO,GAE/B0D,MAAM1D,GACHI,KAAK,SAAAuD,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQzG,IAAI,gBAAgB0G,QAAQ,cAG7C7D,UAAUC,cAAc6D,MAAM3D,KAAK,SAAAC,GACjCA,EAAa2D,aAAa5D,KAAK,WAC7BT,OAAOC,SAASqE,aAKpBlE,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAsD,CAAwBlE,GAIxBC,UAAUC,cAAc6D,MAAM3D,KAAK,WACjCO,QAAQC,IACN,+GAMJb,EAAgBC,MIrCxBmE","file":"static/js/main.b6e4c8f5.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n// import styles from \"./Bar.less\";\r\n\r\nconst styles = theme => ({\r\n  bar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"flex-end\",\r\n    textAlign: \"center\",\r\n    margin: \"3px\"\r\n  },\r\n  strip: {\r\n    border: \"1px solid rgba(0,0,0,0.4)\",\r\n    minWidth: \"30px\",\r\n    minHeight: \"25px\",\r\n    borderRadius: \"4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-around\"\r\n  }\r\n});\r\n\r\nclass Bar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.BAR_BASE_HEIGHT = 3;\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.bar}>\r\n        <div\r\n          className={classes.strip}\r\n          style={{\r\n            height: `${this.props.rollResultCount * this.BAR_BASE_HEIGHT}px`,\r\n            backgroundColor: this.props.backgroundColor\r\n          }}\r\n        >\r\n          {this.props.rollResultCount}\r\n        </div>\r\n        <span>{this.props.rollResult}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(Bar);\r\n","class Dice {\r\n  constructor(max = 6, min = 1) {\r\n    this.max = max;\r\n    this.min = min;\r\n  }\r\n  roll() {\r\n    return Math.floor(Math.random() * (this.max - this.min + 1)) + this.min;\r\n  }\r\n}\r\n\r\nexport default Dice;\r\n","import React, { PureComponent } from \"react\";\r\nimport _ from \"underscore\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Bar from \"./Bar\";\r\nimport { Dice } from \"../models\";\r\nimport { generatePastelColor } from \"../utils/color\";\r\nclass BarPanel extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: {}\r\n    };\r\n  }\r\n\r\n  calculate = () => {\r\n    const { diceCount, diceMax, rollCount } = this.props;\r\n    let result = [];\r\n    for (let i = 0; i < rollCount; i++) {\r\n      let sum = 0;\r\n      for (let j = 0; j < diceCount; j++) {\r\n        const dice = new Dice(diceMax);\r\n        sum += dice.roll();\r\n      }\r\n      result.push(sum);\r\n    }\r\n    return _.groupBy(result, function(num) {\r\n      return num;\r\n    });\r\n  };\r\n  render() {\r\n    const bars = this.calculate();\r\n    const highestBar = Object.keys(bars).reduce((prev, curr) => {\r\n      const _bars = bars;\r\n      // debugger;\r\n      let prevVal = prev;\r\n      let currVal = _bars[curr].length;\r\n      return prevVal > currVal ? prevVal : currVal;\r\n    }, Object.keys(bars)[0]);\r\n    return (\r\n      <React.Fragment>\r\n        {Object.keys(bars).map(key => {\r\n          return (\r\n            <Bar\r\n              key={key}\r\n              rollResult={key}\r\n              rollResultCount={bars[key].length}\r\n              backgroundColor={generatePastelColor({\r\n                hue: key / Object.keys(bars).length,\r\n                // hue: bars[key].length / highestBar,\r\n                saturation: 0.67,\r\n                lightness: 0.3\r\n              })}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nBarPanel.propTypes = {\r\n  rollCount: PropTypes.number.isRequired,\r\n  diceCount: PropTypes.number.isRequired,\r\n  diceMax: PropTypes.number.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { ...state.toJS() };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BarPanel);\r\n","export const generatePastelColor = ({\r\n  hue = Math.random(),\r\n  saturation = Math.random(),\r\n  lightness = Math.random()\r\n}) => `hsl(${360 * hue},${25 + 70 * saturation}%,${85 + 10 * lightness}%)`;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Header extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <code>\r\n          {`Sprawdzenie dokładności rozkładu Gaussa:\r\n        liczba losowań: ${this.props.rollCount}; \r\n        liczba kostek: ${this.props.diceCount};\r\n        rozmiar kostki: k${this.props.diceMax};`}\r\n        </code>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  rollCount: PropTypes.number.isRequired,\r\n  diceCount: PropTypes.number.isRequired,\r\n  diceMax: PropTypes.number.isRequired\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { ...state.toJS() };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","const Actions = {\r\n  updateRollCount: \"UPDATE_ROLL_COUNT\",\r\n  updateRollCountCompleted: \"UPDATE_ROLL_COUNT_COMPLETED\",\r\n  updateDiceCount: \"UPDATE_DICE_COUNT\",\r\n  updateDiceCountCompleted: \"UPDATE_DICE_COUNT_COMPLETED\",\r\n  updateDiceMax: \"UPDATE_DICE_SIZE_MAX\",\r\n  updateDiceMaxCompleted: \"UPDATE_DICE_SIZE_MAX_COMPLETED\"\r\n};\r\nexport default Actions;\r\nexport const actionBuilder = (type, payload) => {\r\n  return {\r\n    type,\r\n    payload\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles, TextField, Grid, Button } from \"@material-ui/core\";\r\nimport classNames from \"classnames\";\r\nimport Actions, { actionBuilder } from \"../actions\";\r\nimport { capitalize } from \"../utils/strings\";\r\n\r\nclass Form extends Component {\r\n  bindOnChange = field => {\r\n    const actionName = `update${capitalize(field)}`;\r\n    const { dispatch } = this.props;\r\n    return e => {\r\n      dispatch(actionBuilder(Actions[actionName], parseInt(e.target.value)));\r\n    };\r\n  };\r\n  render() {\r\n    const { classes, rollCount, diceCount, diceMax } = this.props;\r\n    return (\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <Grid container spacing={16} justify=\"center\">\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-dense\"\r\n              label=\"rollCount\"\r\n              className={classNames(classes.textField, classes.dense)}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              value={rollCount}\r\n              onChange={this.bindOnChange(\"rollCount\")}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-dense\"\r\n              label=\"diceCount\"\r\n              className={classNames(classes.textField, classes.dense)}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              value={diceCount}\r\n              onChange={this.bindOnChange(\"diceCount\")}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-dense\"\r\n              label=\"diceMax\"\r\n              className={classNames(classes.textField, classes.dense)}\r\n              margin=\"dense\"\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              value={diceMax}\r\n              onChange={this.bindOnChange(\"diceMax\")}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Recalculate\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    rollCount: state.get(\"rollCount\"),\r\n    diceCount: state.get(\"diceCount\"),\r\n    diceMax: state.get(\"diceMax\")\r\n  };\r\n};\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  dense: {\r\n    marginTop: 16\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  gridItem: {}\r\n});\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps)(Form));\r\n","export function capitalize(string, splitOn = \" \") {\r\n  const words = string.split(splitOn);\r\n  const capitalized = words.map(word => {\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  });\r\n  return capitalized.join(splitOn);\r\n}\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  const currYear = new Date().getFullYear();\r\n  return <React.Fragment>{currYear}</React.Fragment>;\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\n// import CameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n/* ----------------------- */\r\nimport { BarPanel, Header } from \"../components\";\r\nimport Form from \"../components/Form\";\r\nimport Year from \"../components/Year\";\r\n\r\nconst styles = theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing.unit * 2\r\n  },\r\n  heroUnit: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  heroContent: {\r\n    maxWidth: 600,\r\n    margin: \"0 auto\",\r\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing.unit * 4\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing.unit * 6\r\n  }\r\n});\r\n\r\nfunction Dashboard(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          {/* <CameraIcon className={classes.icon} /> */}\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Gaussian Distribution\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroUnit}>\r\n          <div className={classes.heroContent}>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              Gaussian Distribution\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h6\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n            >\r\n              The Gaussian distribution is a continuous function which\r\n              approximates the exact binomial distribution of events.\r\n              <br />\r\n              Here you can see the example distribution shown on dice rolling.\r\n            </Typography>\r\n            <Header />\r\n            <Form />\r\n          </div>\r\n        </div>\r\n        <div className={classes.layout}>\r\n          <BarPanel />\r\n        </div>\r\n      </main>\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Gaussian Distribution\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Brought to you by <a href=\"https://github.com/plysik\">Piotr Łysik</a>{\" \"}\r\n          with 💖 and <a href=\"https://material-ui.com/\">Material-UI</a> &copy;{\" \"}\r\n          <Year />\r\n        </Typography>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n// import { Header } from \"./components\";\r\n// import BarPanel from \"./components/BarPanel\";\r\nimport { Dashboard } from \"./dashboard\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider {...this.props}>\r\n        <Dashboard />\r\n        {/* <div className=\"App\">\r\n          <header className=\"App-header\"></header>\r\n          <div className=\"App-intro\">\r\n            <BarPanel />\r\n          </div>\r\n        </div> */}\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import Immutable from \"immutable\";\r\nimport Actions from \"./actions\";\r\nexport const initialState = Immutable.fromJS({\r\n  rollCount: 1000,\r\n  diceCount: 3,\r\n  diceMax: 6\r\n});\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Actions.updateDiceCountCompleted:\r\n      return state.set(\"diceCount\", action.payload);\r\n    case Actions.updateDiceMaxCompleted:\r\n      return state.set(\"diceMax\", action.payload);\r\n    case Actions.updateRollCountCompleted:\r\n      return state.set(\"rollCount\", action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport Actions, { actionBuilder } from \"./actions\";\r\nfunction* updateDiceCount(action) {\r\n  yield put(actionBuilder(Actions.updateDiceCountCompleted, action.payload));\r\n}\r\nfunction* updateDiceMax(action) {\r\n  yield put(actionBuilder(Actions.updateDiceMaxCompleted, action.payload));\r\n}\r\nfunction* updateRollCount(action) {\r\n  yield put(actionBuilder(Actions.updateRollCountCompleted, action.payload));\r\n}\r\nexport default function* rootSaga() {\r\n  yield takeLatest(Actions.updateDiceCount, updateDiceCount);\r\n  yield takeLatest(Actions.updateDiceMax, updateDiceMax);\r\n  yield takeLatest(Actions.updateRollCount, updateRollCount);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"./App.reducer\";\r\nimport rootSaga from \"./App.sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  const logger = createLogger();\r\n  middlewares.push(logger);\r\n}\r\nconst createStoreWithMiddleware = applyMiddleware(...middlewares)(createStore);\r\n\r\nconst shouldLoadDevTools =\r\n  window.devToolsExtension && process.env.NODE_ENV !== \"production\"\r\n    ? window.devToolsExtension()\r\n    : f => f;\r\n\r\nexport default function configureStore(initialState) {\r\n  const store = createStoreWithMiddleware(\r\n    rootReducer,\r\n    initialState,\r\n    shouldLoadDevTools\r\n  );\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport configureStore from \"./App.store\";\r\nimport { initialState } from \"./App.reducer\";\r\n\r\nconst store = configureStore(initialState);\r\nstore.dispatch({ type: \"APP_INIT\" });\r\nReactDOM.render(<App store={store} />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}